# Generated by Django 5.2.3 on 2025-07-12 18:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import multiselectfield.db.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('profile_pic', models.URLField()),
                ('comment', models.TextField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('website', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.URLField()),
                ('header', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('source', models.CharField(max_length=255)),
                ('views', models.PositiveIntegerField(default=0)),
                ('share_link', models.URLField()),
                ('main_category', models.CharField(choices=[('World-News', 'World-News'), ('Local-News', 'Local-News'), ('Sport', 'Sport'), ('Technology', 'Technology'), ('Entertainment', 'Entertainment'), ('Scientific', 'Scientific'), ('Business', 'Business'), ('Politics', 'Politics')], max_length=50)),
                ('sub_category', models.CharField(blank=True, max_length=100)),
                ('is_top_news', models.BooleanField(default=False)),
                ('top_news_priority', models.PositiveSmallIntegerField(blank=True, help_text='Priority from 1 (highest) to 20 (lowest) for top news.', null=True, unique=True)),
                ('is_trending', models.BooleanField(default=False)),
                ('trending_priority', models.PositiveSmallIntegerField(blank=True, help_text='Priority from 1 (highest) to 30 (lowest) for trending news.', null=True, unique=True)),
                ('is_posted', models.BooleanField(default=False, help_text='Mark as posted or unposted.')),
                ('comments', models.ManyToManyField(blank=True, related_name='news_posts', to='news.comment')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('subscribe_newsletter', models.BooleanField(default=False)),
                ('notification_preferences', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('World-News', 'World-News'), ('Local-News', 'Local-News'), ('Sport', 'Sport'), ('Technology', 'Technology'), ('Entertainment', 'Entertainment'), ('Scientific', 'Scientific'), ('Business', 'Business'), ('Politics', 'Politics')], max_length=81)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('time_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('comment_history', models.ManyToManyField(blank=True, related_name='commented_by_users', to='news.comment')),
                ('post_read_history', models.ManyToManyField(blank=True, related_name='read_by_users', to='news.newspost')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
